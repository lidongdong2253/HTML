{"version":3,"sources":["assets/scripts/core/adaptation.js","assets/scripts/core/ada.js","assets/scripts/core/until/err.js","assets/scripts/core/until/event.js","assets/scripts/core/until/funcs.js","assets/scripts/core/net/https.js","assets/scripts/core/init.js","assets/scripts/main/joinLayer.js","assets/scripts/login/loginScene.js","assets/scripts/main/mainScene.js","assets/scripts/core/notice/notice.js","assets/scripts/main/ruleLayer.js","assets/scripts/core/until/uiFuncs.js","assets/scripts/update/update.js"],"names":["cc","Class","extends","Component","properties","onLoad","canvas","this","node","getComponent","Canvas","sys","isBrowser","designResolutionBI","designResolution","width","height","visibleRectSize","visibleRect","log","fitWidth","fitHeight","start","winSize","director","getWinSize","rate","window","wsft","err","LABEL_START_DELAY","module","exports","event","addBtnEvent","btn","MyComponent","callback","customEventData","clickEventHandler","EventHandler","target","component","handler","button","Button","clickEvents","push","funcs","getTxTStr","_url","loader","loadRes","data","uiFuncs","showTip","https","get","ctor","self","num_lable","inputNum","join_bg","find","initAllBtn","i","lable","Label","active","bindTouchLayer","onEnable","resetBtn","length","string","delLabelBtn","getRoomId","roomId","inputLabel","_num","sendRoomID","onDisable","allBtnCallback","name","btnHader","btnPath","agreementLabel","agreementLayer","ag_scrollView_node","agreementCheckBox","Toggle","_lable","closeAgreementLayer","isChecked","jumpScene","showAgreementLayer","loadScene","join_room_layer","rule_layer","notice","noticeNode","noticeJS","setDefaultNotice","defaultNotice","isRuning","noticeTable","String","speed","Lable","mask","setSpeed","_speed","_defaultNotice","undefined","runNotice","addNoticeTable","_noticeTable","str","shift","x","y","ac","sequence","moveBy","callFunc","_runAction","runAction","moveX","time","spriteFrame_1","SpriteFrame","spriteFrame_2","btn_1","btn_2","rule_scroll","ScrollView","rule_info_node","rule_bg","scrollToTop","interactable","showImg","_spriteFrame","rule_height","Sprite","spriteFrame","content","stopAutoScroll","_txt","_fontSize","_time","_color","prefab","showTime","fontSize","color","Color","tipNode","instantiate","scene","getScene","addChild","tipNodeX","tipNodeY","fontHeight","destroy","action1","moveTo","v2","action2","delayTime","action3","seq","_touchNode","_node","_callback","on","Node","EventType","TOUCH_END","_event","pos","getLocation","getBoundingBoxToWorld","contains","init","require","tipLable","initNew","is_loading","jindu","onProgress","completedCount","totalCount","item","number_jindu","parseInt","loadResDir","textures","update","dt"],"mappings":"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","sourcesContent":["\n/**\n * web适配\n * 功能：  web适配\n * author：lidongdong\n * time:2018.9.6\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var canvas = this.node.getComponent(cc.Canvas);\n        if(cc.sys.isBrowser){ //判断是不是浏览器\n            var designResolutionBI = canvas.designResolution.width/canvas.designResolution.height\n            var visibleRectSize = cc.visibleRect.width/cc.visibleRect.height\n            cc.log(canvas.designResolution.width)\n            cc.log(canvas.designResolution.height)\n            cc.log(cc.visibleRect.width)\n            cc.log(cc.visibleRect.height)\n            if ( designResolutionBI >= visibleRectSize) {    \n                // canvas.fitWidth = false;\n                // canvas.fitHeight = true;\n                canvas.fitWidth = true;\n                canvas.fitHeight = true;\n                cc.log(\"设计分辨率宽高比大于屏幕分辨率，适配高度避免黑边\");\n            } else {\n                // canvas.fitWidth = true;\n                // canvas.fitHeight = false;\n                canvas.fitWidth = true;\n                canvas.fitHeight = true;\n                cc.log(\"设计分辨率宽高比小于屏幕分辨率，适配宽度避免黑边\");\n            }\n        }else{\n\n        }\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var winSize = cc.director.getWinSize();\n        var rate = winSize.width / winSize.height;\n        \n        var canvas = this.node.getComponent(cc.Canvas);\n        if(rate > 1.9){\n            canvas.fitWidth = false;\n            canvas.fitHeight = true;\n        }\n        else{\n            canvas.fitWidth = true;\n            canvas.fitHeight = false;\n        }\n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","window.wsft = window.wsft || {}\nvar err = {\n    LABEL_START_DELAY:\"label_start_delay\",\n}\nwsft.err = module.exports = err;","\n/**\n * 事件封装回调\n * 功能：  对于btn 等一些事件进行的封装\n * author：lidongdong\n * time:2018.8.30\n */\nwindow.wsft = window.wsft || {}\nvar event = {\n    /*\n    /*\n    添加按钮事件监听\n    1 btn 这个btn的node\n    2 node 这个 node 节点是btn事件处理代码组件所属的节点\n    3 MyComponent 这个是btn所属代码文件名 string类型\n    4 callback btn的回调函数 string类型\n    5 customEventData 自定义事件数据\n    */\n   addBtnEvent:function(btn,node,MyComponent,callback,customEventData){\n        var clickEventHandler = new cc.Component.EventHandler();\n        clickEventHandler.target = node; \n        clickEventHandler.component = MyComponent;\n        clickEventHandler.handler = callback;\n        clickEventHandler.customEventData = customEventData;\n\n        var button = btn.getComponent(cc.Button);\n        button.clickEvents.push(clickEventHandler);\n    },\n}\nwsft.event = module.exports = event;\n","/**\n * 封装一些func\n * 功能：  重复用的一些func 进行修改\n * author：lidongdong\n * time:2018.8.30\n */\nwindow.wsft = window.wsft || {}\nvar funcs = {\n        /*\n            _url显示txt文本的路径\n            callback 回调函数\n        */\n       getTxTStr:function(_url,callback){\n        cc.loader.loadRes(_url,function(err,data){\n            if(err){\n                wsft.uiFuncs.showTip('获取文本失败！',30)\n                callback('')\n            }else{\n                callback(data)\n            }\n        });\n    },\n}\nwsft.funcs = module.exports = funcs;\n\n","window.wsft = window.wsft || {}\nvar https = {\n    get:function(){\n        cc.log(\"HTTP===============Get\");\n        \n    }\n}\nwsft.https = module.exports = https;","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {     \n    },\n    ctor:function(){\n        cc.log(\"------init初始化------------\");\n        window.wsft = window.wsft || {}\n    }\n});\n","// Learn cc.Class:\n/**\n * 加入房间\n * 功能：  push\n * author：lidongdong\n * time:2018.9.4\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n// 不走 \n    onLoad () {\n        var self = this;\n        this.num_lable = [];\n        this.inputNum = 0;\n        var join_bg = cc.find(\"Canvas/join_room_layer/jion_bg_1\");\n        this.initAllBtn();\n        for(var i = 0;i < 6;i ++){\n            var lable = cc.find(\"Canvas/join_room_layer/srk_node/join_srk_\"+ i +\"/join_num_label\").getComponent(cc.Label);\n            this.num_lable.push(lable);\n        }\n        var callback = function(){\n            self.node.active = false;\n        }\n        wsft.uiFuncs.bindTouchLayer(this.node,join_bg,callback);\n    },\n\n    start () {\n\n    },\n    //active = true\n    onEnable(){\n        this.resetBtn()\n    },\n    //重置\n    resetBtn(){\n        cc.log(\"resetBtn==============\")\n        for(var i = 0;i < this.num_lable.length;++i){\n            this.num_lable[i].string = \"\";\n        }\n        this.inputNum = 0;\n    },\n    //删除\n    delLabelBtn(){\n        if(this.inputNum > 0){\n            this.inputNum  -= 1\n            this.num_lable[this.inputNum].string = \"\"\n        }\n    },\n    //获取房间号\n    getRoomId(){\n        var roomId = \"\"\n        for(var i = 0;i <  this.num_lable.length;++i )\n        {\n            roomId += this.num_lable[i].string\n        }\n        return roomId\n    },\n    //输入\n    inputLabel(_num){\n        if(this.inputNum >= this.num_lable.length){\n            return;\n        }\n        this.num_lable[this.inputNum].string = _num;\n        this.inputNum += 1;\n        if(this.inputNum == this.num_lable.length ){\n            var roomId = this.getRoomId()\n            this.sendRoomID(roomId)\n        }\n    },\n    //发送服务器\n    sendRoomID(roomId){\n        cc.log(\"发送房间号-->\"+roomId)\n    },\n    //active = false\n    onDisable(){\n        \n    },\n    \n    allBtnCallback:function(event,name){\n        cc.log(name)\n        if(name === \"close\"){\n            this.node.active = false\n        }\n        else if(name == 10){\n            this.resetBtn()\n        }\n        else if(name == 11){\n            this.delLabelBtn()\n        }\n        else{\n            this.inputLabel(name)\n        }\n\n    },\n   // 初始化所有的btn\n   initAllBtn:function(){\n        cc.log(\"btn==============\")\n        var self = this\n        var btnHader = function(btnPath,name){\n            var btn = cc.find(btnPath)\n            wsft.event.addBtnEvent(btn,self.node,'joinLayer','allBtnCallback',name);\n        }\n        btnHader('Canvas/join_room_layer/close_btn','close'); //close\n        for (var i = 0;i<12;++i){\n            btnHader('Canvas/join_room_layer/btn_node/num_'+ i,i); //close\n        }\n       \n   },\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        agreementLabel:\"\"\n    },\n\n    onLoad () {\n        \n        \n    },\n    start () {\n        var self = this\n        //初始化所有btn事件\n        this.initAllBtn()\n        //wsft协议layer\n        this.agreementLayer =  cc.find(\"Canvas/agreement_layer\")\n        var ag_scrollView_node = cc.find(\"Canvas/agreement_layer/ScrollView\")\n        //获取复选框\n        this.agreementCheckBox = cc.find(\"Canvas/agreement_checkBox\").getComponent(cc.Toggle);\n        //获取协议layerLable组件\n        this._lable = cc.find(\"Canvas/agreement_layer/ScrollView/view/content/item\").getComponent(cc.Label)\n        var callback = function(){\n            self.closeAgreementLayer()\n        }\n        wsft.uiFuncs.bindTouchLayer(this.agreementLayer,ag_scrollView_node,callback)\n    },\n     allBtnCallback:function(event,name){\n         cc.log(name)\n         var self = this\n         if(name === \"wx\"){\n            if (this.agreementCheckBox.isChecked) {\n                self.jumpScene()\n            } \n            else {\n                wsft.uiFuncs.showTip('请同意用户使用协议',30)\n            }\n         }\n         else if(name === \"agreement\"){\n            if (this.agreementLabel===\"\") {\n                var callback = function(data){\n                    cc.log(\"date=\"+data)\n                    self.agreementLabel = data\n                    self._lable.string = self.agreementLabel \n                    self.showAgreementLayer()\n                }\n                wsft.funcs.getTxTStr('argeementTXT',callback)\n            } else {\n                self.showAgreementLayer()\n            }\n         }\n         else if(name === \"agt_close\"){\n            self.closeAgreementLayer()\n         }\n     },\n    // 初始化所有的btn\n    initAllBtn:function(){\n        var self = this\n        var btnHader = function(btnPath,name){\n           var btn = cc.find(btnPath)\n           wsft.event.addBtnEvent(btn,self.node,'loginScene','allBtnCallback',name);\n        }\n        btnHader('Canvas/wx_btn','wx'); //微信\n        btnHader('Canvas/agreement_btn','agreement'); //协议\n\n        btnHader('Canvas/agreement_layer/close_btn','agt_close'); //协议layer的取消按钮\n    },\n\n    showAgreementLayer:function(){\n        this.agreementLayer.active = true\n    },\n\n    closeAgreementLayer:function(){\n        this.agreementLayer.active = false\n    },\n    //跳转场景\n    jumpScene:function(){\n        cc.director.loadScene('MainScene')\n    }\n    // update (dt) {},\n});\n","/**\n * 游戏大厅\n * 功能：  \n * author：lidongdong\n * time:2018.9.1\n */\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    \n   \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    onLoad () {\n        this.initAllBtn()\n        this.join_room_layer = cc.find(\"Canvas/join_room_layer\")\n        this.rule_layer = cc.find(\"Canvas/rule_layer\")\n        \n    }, \n    start () {\n        this.notice()\n    },  \n    //公告\n    notice(){\n        var noticeNode = cc.find('Canvas/notice_node')\n        this.noticeJS = noticeNode.getComponent('notice')\n        //添加默认公告（一种循环这个公告）\n        this.noticeJS.setDefaultNotice(\"北京网圣飞腾欢迎你！\")  \n        //添加广播  就播放一次\n        // self.noticeJS.addNoticeTable(\"你好！你好！\")\n    },\n    allBtnCallback:function(event,name){\n        cc.log(name)\n        var self = this\n        if(name === \"creatroom\"){\n            \n        }\n        else if(name === \"joinroom\"){\n            this.join_room_layer.active = true\n        }\n        else if(name === \"shop\"){\n           \n        }\n        else if(name === \"rule\"){\n            this.rule_layer.active = true\n        }\n        else if(name === \"set\"){\n           \n        }\n        else if(name === \"record\"){\n           \n        }\n        else if(name === \"share\"){\n           \n        }else{\n\n        }\n\n    },\n   // 初始化所有的btn\n   initAllBtn:function(){\n       cc.log(\"btn===init\")\n       var self = this\n       var btnHader = function(btnPath,name){\n          var btn = cc.find(btnPath)\n          wsft.event.addBtnEvent(btn,self.node,'mainScene','allBtnCallback',name);\n       }\n       btnHader('Canvas/center_node/createRoom_btn','creatroom'); //创建房间\n       btnHader('Canvas/center_node/joinRoom_btn','joinroom'); //加入房间\n       btnHader('Canvas/top_node/shop_btn','shop'); //商城\n       btnHader('Canvas/down_node/rule_btn','rule'); //玩法\n       btnHader('Canvas/down_node/set_btn','set'); //设置\n       btnHader('Canvas/down_node/record_btn','record'); //战绩\n       btnHader('Canvas/down_node/share_btn','share'); //分享\n\n       btnHader('Canvas/top_node/info_node/add_diamond_btn','diamond'); //添加砖石（房卡）\n       \n   },\n    // update (dt) {},\n});\n","/**\n * 跑马灯\n * 功能：  1默认的公告 [在没有广播的情况下.这个就循环滚动]\n *        2广播只播放一次\n * author：lidongdong\n * time:2018.8.31\n */\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        defaultNotice:null, //默认的公告 [在没有广播的情况下.这个就循环滚动]\n        isRuning:false,\n        noticeTable:[cc.String],//广播\n        speed:100,//速度\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.Lable = cc.find('Canvas/notice_node/mask_node/notice_label')\n        this._lable = this.Lable.getComponent(cc.Label)\n        this.mask = cc.find('Canvas/notice_node/mask_node')\n    },\n    \n    start () {\n        \n    },\n    //设置速度\n    setSpeed(_speed){\n        this.speed = _speed\n    },\n    //设置默认公告\n    setDefaultNotice(_defaultNotice){\n        if ( _defaultNotice == undefined){return}\n        cc.log(\"设置默认公告===\"+ _defaultNotice);\n        this.defaultNotice = _defaultNotice\n        this.runNotice();\n\n    },\n    //添加广播\n    addNoticeTable(_noticeTable){\n        if( _noticeTable == undefined){return}\n        cc.log(\"添加广播===\"+ _noticeTable);\n        this.noticeTable.push(_noticeTable);\n        this.runNotice();\n    },\n    runNotice(){\n        var self = this\n        if (this.isRuning) {\n            return\n        }\n        var str = \"\"\n        if( this.noticeTable.length == 0){\n            if (this.defaultNotice) {\n                str = this.defaultNotice\n            } else {\n                self.node.active = false\n                return\n            }\n        }else{\n            // str = this.noticeTable[0]\n            str = this.noticeTable.shift()\n        }\n        this.isRuning = true\n        this._lable.string = str\n        this.Lable.x = this.mask.width / 2\n        this.Lable.y = 0\n        //下一帧的处理\n        var ac = cc.sequence(\n            cc.moveBy(0, 0, 0),\n            cc.callFunc(function(){\n                self._runAction();\n            })\n        )\n        self.Lable.runAction(ac)\n    },\n    _runAction(){\n        var self = this\n        var moveX = this.mask.width + this.Lable.width\n        var time = moveX/this.speed\n        var ac = cc.sequence(\n            cc.moveBy(time, -moveX, 0),\n            cc.callFunc(function(){\n                self.isRuning = false;\n                self.runNotice();\n            })\n        )\n        self.Lable.runAction(ac)\n    },   \n});\n","/**\n * 玩法介绍\n * 功能（scrollView） \n * author：lidongdong\n * time:2018.9.5\n */\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        spriteFrame_1:cc.SpriteFrame,\n        spriteFrame_2:cc.SpriteFrame,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var self = this;\n        this.initAllBtn();\n        this.btn_1 = cc.find('Canvas/rule_layer/btn_scroll_view/view/content/btn_1').getComponent(cc.Button);\n        this.btn_2 = cc.find('Canvas/rule_layer/btn_scroll_view/view/content/btn_2').getComponent(cc.Button);\n        this.rule_scroll = cc.find('Canvas/rule_layer/show_scroll_view').getComponent(cc.ScrollView);\n        this.rule_info_node = cc.find('Canvas/rule_layer/show_scroll_view/view/content/rule_show');\n        \n        var rule_bg = cc.find('Canvas/rule_layer/rule_bg');\n        var callback = function(){\n            self.node.active = false;\n        }\n        wsft.uiFuncs.bindTouchLayer(this.node,rule_bg,callback);\n    },\n\n    start () {\n\n    },\n    onEnable(){\n        this.rule_scroll.scrollToTop(0);\n        this.btn_1.interactable = false;\n        this.btn_2.interactable = true;\n        this.showImg(this.spriteFrame_1,1);\n\n    },\n    showImg(_spriteFrame,_num){\n        var rule_height = [1891,1434]; //图片的高度\n        this.rule_info_node.getComponent(cc.Sprite).spriteFrame = _spriteFrame;\n        var content = cc.find('Canvas/rule_layer/show_scroll_view/view/content');\n        content.height = rule_height[_num - 1];\n        this.rule_info_node.height = rule_height[_num - 1];\n    },\n    allBtnCallback:function(event,name){\n        cc.log(name)\n        if(name === \"close\"){\n            this.node.active = false;\n        }\n        else if(name == 'btn_1'){\n            this.rule_scroll.stopAutoScroll();\n            this.btn_1.interactable = false;\n            this.btn_2.interactable = true;\n            this.showImg(this.spriteFrame_1,1);\n            this.rule_scroll.scrollToTop(0);\n        }\n        else if(name == 'btn_2'){\n            this.rule_scroll.stopAutoScroll();\n            this.btn_1.interactable = true;\n            this.btn_2.interactable = false;\n            this.showImg(this.spriteFrame_2,2);\n            this.rule_scroll.scrollToTop(0);\n        }\n        else{\n            \n        }\n\n    },\n    initAllBtn:function(){\n        var self = this\n        var btnHader = function(btnPath,name){\n            var btn = cc.find(btnPath);\n            wsft.event.addBtnEvent(btn,self.node,'ruleLayer','allBtnCallback',name);\n        }\n        btnHader('Canvas/rule_layer/colse_btn','close'); //close\n        btnHader('Canvas/rule_layer/btn_scroll_view/view/content/btn_1','btn_1'); //btn_1\n        btnHader('Canvas/rule_layer/btn_scroll_view/view/content/btn_2','btn_2'); //btn_2\n    },\n    onDisable(){\n        this.rule_scroll.stopAutoScroll()\n    },\n    // update (dt) {},\n});\n","/**\n * 封装一些UI 方法\n * 功能：  \n * author：lidongdong\n * time:2018.8.30\n */\n\nwindow.wsft = window.wsft || {}\nvar uiFuncs = {\n    /*\n        showTip显示tip\n        _txt 显示的内容\n        _fontSize 字体的大小 默认 40 \n        _time 显示的时间 默认为 2 \n        _color 字体的颜色 new cc.Color(255, 255, 73\n     */\n    showTip:function (_txt,_fontSize,_time,_color) {\n        cc.loader.loadRes(\"common/prefabs/showTip\", function (err, prefab) {\n            var showTime = _time || 2\n            var fontSize = _fontSize || 40\n            var color = _color || (new cc.Color(255, 255, 73))\n\n            var tipNode = cc.instantiate(prefab);\n            var _lable = tipNode.getComponent(cc.Label)\n            var scene = cc.director.getScene()\n            scene.addChild(tipNode);\n            var tipNodeX = cc.winSize.width * .5\n            var tipNodeY = cc.winSize.height * .5 \n            tipNode.x = tipNodeX\n            tipNode.y = tipNodeY - 100\n            tipNode.color =  color\n            _lable.fontSize = fontSize\n            _lable.fontHeight = fontSize\n            _lable.string = _txt;\n            var callFunc = function(){\n                tipNode.destroy();\n            }\n            var action1 = cc.moveTo(.5, cc.v2(tipNodeX, tipNodeY));\n            var action2 = cc.delayTime(showTime)\n            var action3 =  cc.callFunc(callFunc)\n            var seq = cc.sequence(action1,action2,action3);\n            tipNode.runAction(seq);\n        });\n    },\n     /*\n        * 弹窗添加触摸处理层\n        * _touchNode: 弹窗跟节点，用于添加触摸，必须全屏\n         * _node: 传入一个节点，用于判断区域\n        * _callback: 点击在弹窗外时的处理\n    */\n    bindTouchLayer: function (_touchNode, _node, _callback) {\n        // 判断是否在_node外面\n        _touchNode.on(cc.Node.EventType.TOUCH_END, function (_event) {\n            var pos = _event.getLocation();\n            // 在_node节点外面\n            if (!_node.getBoundingBoxToWorld().contains( _event.getLocation())) {\n                var callback = _callback || function () { };\n                callback();\n            }\n        });\n    },\n}\nwsft.uiFuncs = module.exports = uiFuncs;\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\nvar init = require('init')\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        tipLable:cc.Label,\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    \n    onLoad () {\n        //初始化数据\n        var initNew = new init()\n        this.is_loading = true   \n        this.jindu = 0 \n    },\n    start () {\n        var self = this\n        // var action2 = cc.delayTime(1)\n        // var action3 =  cc.callFunc(this.jumpScene)\n        // var seq = cc.sequence(action2,action3);\n        // this.node.runAction(seq);\n        cc.loader.onProgress = function ( completedCount, totalCount,  item ){\n            if(self.is_loading){\n                self.jindu = completedCount/totalCount;\n            }\n            var number_jindu = parseInt(self.jindu*100);\n            self.tipLable.string = \"正在加载资源，请稍候...\"+number_jindu+'%'\n        }\n        \n        cc.loader.loadResDir(\"textures\", function (err, textures) {    \n            self.is_loading = false       \n            self.jumpScene()\n        });\n    },\n\n    //跳转场景\n    jumpScene:function(){\n        cc.director.loadScene('LoginScene')\n    },\n\n    update (dt) {\n\n    },\n});\n"],"sourceRoot":"/source/","file":"project.dev.js"}